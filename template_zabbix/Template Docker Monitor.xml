<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
    <version>4.4</version>
    <date>2020-01-21T00:03:33Z</date>
    <groups>
        <group>
            <name>Docker</name>
        </group>
    </groups>
    <templates>
        <template>
            <template>Template Docker</template>
            <name>Template Docker</name>
            <description>Template Docker - Developed by SSR/TRE-PA - Brazil</description>
            <groups>
                <group>
                    <name>Docker</name>
                </group>
            </groups>
            <discovery_rules>
                <discovery_rule>
                    <name>Container Discovery Rule</name>
                    <key>docker.discovery</key>
                    <delay>10m</delay>
                    <lifetime>5d</lifetime>
                    <description>Container Discovery Rule</description>
                    <item_prototypes>
                        <item_prototype>
                            <name>cpu: % usage</name>
                            <key>docker.cpu.usage[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>disk blocks: aggregate read</name>
                            <key>docker.disc.block_read[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>disk blocks: aggregate write</name>
                            <key>docker.disc.block_write[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>memory: limit</name>
                            <key>docker.mem.limit[{#CONTAINERNAME}]</key>
                            <delay>1h</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>memory: % usage</name>
                            <key>docker.mem.percent[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>%</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&gt;70</expression>
                                    <name>Container {#CONTAINERNAME} memory usage &gt; 70%</name>
                                    <priority>WARNING</priority>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>memory: usage</name>
                            <key>docker.mem.usage[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>if total: traffic in</name>
                            <type>DEPENDENT</type>
                            <key>docker.net.rx[{#CONTAINERNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>bps</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.net.total_rx[{#CONTAINERNAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>if total: aggregate traffic in</name>
                            <key>docker.net.total_rx[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>if total: aggregate traffic out</name>
                            <key>docker.net.total_tx[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>if total: traffic out</name>
                            <type>DEPENDENT</type>
                            <key>docker.net.tx[{#CONTAINERNAME}]</key>
                            <delay>0</delay>
                            <value_type>FLOAT</value_type>
                            <units>bps</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <preprocessing>
                                <step>
                                    <type>CHANGE_PER_SECOND</type>
                                    <params/>
                                </step>
                                <step>
                                    <type>MULTIPLIER</type>
                                    <params>8</params>
                                </step>
                            </preprocessing>
                            <master_item>
                                <key>docker.net.total_tx[{#CONTAINERNAME}]</key>
                            </master_item>
                        </item_prototype>
                        <item_prototype>
                            <name>Start Date</name>
                            <key>docker.startedAt[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <units>unixtime</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>uptime</name>
                            <type>CALCULATED</type>
                            <key>docker.uptime[{#CONTAINERNAME}]</key>
                            <delay>2m</delay>
                            <units>uptime</units>
                            <params>last(&quot;system.localtime&quot;) - last(&quot;docker.startedAt[{#CONTAINERNAME}]&quot;)</params>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                            <trigger_prototypes>
                                <trigger_prototype>
                                    <expression>{last()}&lt;5m</expression>
                                    <name>Container {#CONTAINERNAME} restarted</name>
                                    <priority>INFO</priority>
                                    <description>Indicate when containers starts</description>
                                </trigger_prototype>
                            </trigger_prototypes>
                        </item_prototype>
                    </item_prototypes>
                    <graph_prototypes>
                        <graph_prototype>
                            <name>_{#CONTAINERNAME}: aggregate traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>199C0D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.net.total_rx[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.net.total_tx[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>_{#CONTAINERNAME}: cpu</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>199C0D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.cpu.usage[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>_{#CONTAINERNAME}: memory</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.mem.usage[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <color>2774A4</color>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.mem.percent[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>_{#CONTAINERNAME}: traffic</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>199C0D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.net.rx[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                                <graph_item>
                                    <sortorder>1</sortorder>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>F63100</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.net.tx[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                        <graph_prototype>
                            <name>_{#CONTAINERNAME}: uptime</name>
                            <graph_items>
                                <graph_item>
                                    <drawtype>GRADIENT_LINE</drawtype>
                                    <color>199C0D</color>
                                    <yaxisside>RIGHT</yaxisside>
                                    <item>
                                        <host>Template Docker</host>
                                        <key>docker.uptime[{#CONTAINERNAME}]</key>
                                    </item>
                                </graph_item>
                            </graph_items>
                        </graph_prototype>
                    </graph_prototypes>
                </discovery_rule>
                <discovery_rule>
                    <name>Container Interface Discovery Rules</name>
                    <key>docker.interfaces</key>
                    <delay>5m</delay>
                    <lifetime>5d</lifetime>
                    <item_prototypes>
                        <item_prototype>
                            <name>if {#CONTAINERINTERFACE}: aggregate traffic in</name>
                            <key>docker.net.interface.rx[{#CONTAINERNAME},{#CONTAINERINTERFACE}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                        <item_prototype>
                            <name>if {#CONTAINERINTERFACE}: aggregate traffic out</name>
                            <key>docker.net.interface.tx[{#CONTAINERNAME},{#CONTAINERINTERFACE}]</key>
                            <delay>2m</delay>
                            <value_type>FLOAT</value_type>
                            <units>B</units>
                            <application_prototypes>
                                <application_prototype>
                                    <name>Container {#CONTAINERNAME}</name>
                                </application_prototype>
                            </application_prototypes>
                        </item_prototype>
                    </item_prototypes>
                </discovery_rule>
            </discovery_rules>
        </template>
    </templates>
</zabbix_export>
